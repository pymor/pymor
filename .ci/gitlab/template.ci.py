#!/usr/bin/env python3

tpl = '''# THIS FILE IS AUTOGENERATED -- DO NOT EDIT #
#   Edit and Re-run .ci/gitlab/yml_template.py instead       #

stages:
  - test
  - check install
  - deploy

3.6_numpy:
    image: pymor/testing:3.6
    stage: test
    script:
      - export PYMOR_PYTEST_MARKER="NUMPY" DOCKER_TAG="3.6"
      - .ci/gitlab/script.bash

{%- for py, m in matrix %}
{{py}}_{{m}}:
    image: pymor/testing:{{py}}
    stage: test
    script:
      - export PYMOR_PYTEST_MARKER="{{m}}" DOCKER_TAG="{{py}}"
      - .ci/gitlab/script.bash
{%- endfor %}

.docker-in-docker:
    image: docker:stable
    variables:
        DOCKER_HOST: tcp://docker:2375/
        DOCKER_DRIVER: overlay2
    before_script:
        - apk --update add openssh-client rsync git file bash python3
        - pip3 install jinja2
        - 'export SHARED_PATH="$(dirname ${CI_PROJECT_DIR})/shared"'
        - mkdir -p ${SHARED_PATH}
    services:
        - docker:dind

{%- for OS in testos %}
{{OS}}:
    extends: .docker-in-docker
    stage: check install
    script: docker build -f .ci/docker/install_checks/{{OS}}/Dockerfile .
{% endfor %}

deploy:
    extends: .docker-in-docker
    stage: deploy
    only: ['branches', 'tags']
    script: bash .ci/gitlab/deploy.bash

# THIS FILE IS AUTOGENERATED -- DO NOT EDIT #
#   Edit and Re-run .ci/travis/yml_template.py instead       #

'''


import os
import jinja2
import sys
from itertools import product
tpl = jinja2.Template(tpl)
pythons = ['3.6', '3.7']
marker = [None, "PIP_ONLY", "MPI"]
with open(os.path.join(os.path.dirname(__file__), 'ci.yml'), 'wt') as yml:
    matrix = list(product(pythons, marker))
    yml.write(tpl.render(matrix=matrix,testos=['debian_stable', 'debian_testing', 'centos_7']))
