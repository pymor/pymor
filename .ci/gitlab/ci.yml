# THIS FILE IS AUTOGENERATED -- DO NOT EDIT #
#   Edit and Re-run .ci/gitlab/template.ci.py instead       #

stages:
  - sanity
  - test
  - build
  - install_checks
  - deploy

#************ definition of base jobs *********************************************************************************#

.test_base:
    retry:
        max: 2
        when:
            - runner_system_failure
            - stuck_or_timeout_failure
            - api_failure
    rules:
        - if: $CI_COMMIT_REF_NAME =~ /^staging.*/
          when: never
        - when: on_success
    variables:
        PYPI_MIRROR_TAG: f6acb8bdf750d965c15f7f90b01fac4b745b58bd
        CI_IMAGE_TAG: f6acb8bdf750d965c15f7f90b01fac4b745b58bd
        PYMOR_HYPOTHESIS_PROFILE: ci

.pytest:
    extends: .test_base
    tags:
      - long execution time
    environment:
        name: unsafe
    stage: test
    after_script:
      - .ci/gitlab/after_script.bash
    cache:
        key: same_db_on_all_runners
        paths:
          - .hypothesis
    artifacts:
        name: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
        expire_in: 3 months
        paths:
            - src/pymortests/testdata/check_results/*/*_changed
            - coverage*
            - memory_usage.txt
            - .hypothesis
        reports:
            junit: test_results*.xml


.submit:
    extends: .test_base
    image: zivgitlab.wwu.io/pymor/docker/pymor/ci_sanity:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    variables:
        XDG_CACHE_DIR: /tmp
    retry:
        max: 2
        when:
            - always
    environment:
        name: safe
    rules:
        - if: $CI_COMMIT_REF_NAME =~ /^github\/PR_.*/
          when: never
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    stage: deploy
    script: .ci/gitlab/submit.bash

.docker-in-docker:
    tags:
      - docker-in-docker
    extends: .test_base
    timeout: 45 minutes
    retry:
        max: 2
        when:
            - runner_system_failure
            - stuck_or_timeout_failure
            - api_failure
            - unknown_failure
            - job_execution_timeout
    
    image: pymor/docker-in-docker:d1b5ebb4dc42a77cae82411da2e503a88bb8fb3a
    variables:
        DOCKER_HOST: tcp://docker:2375/
        DOCKER_DRIVER: overlay2
    before_script:
        - 'export SHARED_PATH="${CI_PROJECT_DIR}/shared"'
        - mkdir -p ${SHARED_PATH}
    services:
        - docker:dind
    environment:
        name: unsafe


# this should ensure binderhubs can still build a runnable image from our repo
.binder:
    extends: .docker-in-docker
    stage: install_checks
    needs: ["ci setup"]
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        IMAGE: ${CI_REGISTRY_IMAGE}/binder:${CI_COMMIT_REF_SLUG}
        CMD: "jupyter nbconvert --to notebook --execute /pymor/.ci/ci_dummy.ipynb"
        USER: juno

.wheel:
    extends: .docker-in-docker
    stage: build
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success


.check_wheel:
    extends: .test_base
    stage: install_checks
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    services:
      - pymor/devpi:1
    dependencies:
      - "wheel 1 py3 6"
      - "wheel 2010 py3 6"
      - "wheel 2014 py3 6"
      - "wheel 1 py3 7"
      - "wheel 2010 py3 7"
      - "wheel 2014 py3 7"
      - "wheel 1 py3 8"
      - "wheel 2010 py3 8"
      - "wheel 2014 py3 8"
    needs: ["wheel 1 py3 6","wheel 2010 py3 6","wheel 2014 py3 6","wheel 1 py3 7","wheel 2010 py3 7","wheel 2014 py3 7","wheel 1 py3 8","wheel 2010 py3 8","wheel 2014 py3 8",]
    before_script:
      - pip3 install devpi-client
      - devpi use http://pymor__devpi:3141/root/public --set-cfg
      - devpi login root --password none
      - devpi upload --from-dir --formats=* ./shared
    # the docker service adressing fails on other runners
    tags: [mike]

.sanity_checks:
    extends: .test_base
    image: zivgitlab.wwu.io/pymor/docker/pymor/ci_sanity:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    stage: sanity
#******** end definition of base jobs *********************************************************************************#

# https://docs.gitlab.com/ee/ci/yaml/README.html#workflowrules-templates
include:
  - template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'

#******* sanity stage

# this step makes sure that on older python our install fails with
# a nice message ala "python too old" instead of "SyntaxError"
verify setup.py:
    extends: .sanity_checks
    script:
        - python3 setup.py egg_info

ci setup:
    extends: .sanity_checks
    script:
        - apk add jq
        - ${CI_PROJECT_DIR}/.ci/gitlab/ci_sanity_check.bash "3.6 3.7 3.8"

#****** test stage

minimal_cpp_demo:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script: ./.ci/gitlab/cpp_demo.bash
mpi 3 6:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_mpi__3.6
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_mpi.bash
        - find . -name "coverage*"
        - ls -la *
mpi 3 7:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_mpi__3.7
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_mpi.bash
        - find . -name "coverage*"
        - ls -la *
mpi 3 8:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_mpi__3.8
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_mpi.bash
        - find . -name "coverage*"
        - ls -la *
notebooks_dir 3 6:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_notebooks_dir__3.6
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_notebooks_dir.bash
        - find . -name "coverage*"
        - ls -la *
notebooks_dir 3 7:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_notebooks_dir__3.7
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_notebooks_dir.bash
        - find . -name "coverage*"
        - ls -la *
notebooks_dir 3 8:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_notebooks_dir__3.8
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_notebooks_dir.bash
        - find . -name "coverage*"
        - ls -la *
pip_installed 3 6:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_pip_installed__3.6
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_pip_installed.bash
        - find . -name "coverage*"
        - ls -la *
pip_installed 3 7:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_pip_installed__3.7
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_pip_installed.bash
        - find . -name "coverage*"
        - ls -la *
pip_installed 3 8:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_pip_installed__3.8
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_pip_installed.bash
        - find . -name "coverage*"
        - ls -la *
vanilla 3 6:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_vanilla__3.6
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_vanilla.bash
        - find . -name "coverage*"
        - ls -la *
vanilla 3 7:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_vanilla__3.7
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_vanilla.bash
        - find . -name "coverage*"
        - ls -la *
vanilla 3 8:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_vanilla__3.8
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_vanilla.bash
        - find . -name "coverage*"
        - ls -la *
numpy_git 3 8:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_numpy_git__3.8
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_numpy_git.bash
        - find . -name "coverage*"
        - ls -la *
oldest 3 6:
    extends: .pytest
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    variables:
        COVERAGE_FILE: coverage_oldest__3.6
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_oldest_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - |
          if [[ "$CI_COMMIT_REF_NAME" == *"github/PR_"* ]]; then
            echo selecting hypothesis profile "ci_pr" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci_pr"
          else
            echo selecting hypothesis profile "ci" for branch $CI_COMMIT_REF_NAME
            export PYMOR_HYPOTHESIS_PROFILE="ci"
          fi
        - ./.ci/gitlab/test_oldest.bash
        - find . -name "coverage*"
        - ls -la *
ci_weekly 3 6:
    extends: .pytest
    timeout: 5h
    variables:
        COVERAGE_FILE: coverage_ci_weekly
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: always
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    
    script: ./.ci/gitlab/test_vanilla.bash
ci_weekly 3 7:
    extends: .pytest
    timeout: 5h
    variables:
        COVERAGE_FILE: coverage_ci_weekly
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: always
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    
    script: ./.ci/gitlab/test_vanilla.bash
ci_weekly 3 8:
    extends: .pytest
    timeout: 5h
    variables:
        COVERAGE_FILE: coverage_ci_weekly
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: always
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/testing_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    
    script: ./.ci/gitlab/test_vanilla.bash

submit coverage:
    extends: .submit
    artifacts:
        when: always
        name: "submit"
        paths:
            - cover/*
            - .coverage
    dependencies:
        - mpi 3 6
        - mpi 3 7
        - mpi 3 8
        - vanilla 3 6
        - vanilla 3 7
        - vanilla 3 8
        - numpy_git 3 8
        - oldest 3 6
submit ci_weekly 3 6:
    extends: .submit
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: always
    image: zivgitlab.wwu.io/pymor/docker/pymor/python:3.6
    dependencies:
        - ci_weekly 3 6
    needs: ["ci_weekly 3 6"]
submit ci_weekly 3 7:
    extends: .submit
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: always
    image: zivgitlab.wwu.io/pymor/docker/pymor/python:3.7
    dependencies:
        - ci_weekly 3 7
    needs: ["ci_weekly 3 7"]
submit ci_weekly 3 8:
    extends: .submit
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: always
    image: zivgitlab.wwu.io/pymor/docker/pymor/python:3.8
    dependencies:
        - ci_weekly 3 8
    needs: ["ci_weekly 3 8"]



pip 1/3:
    tags: [mike]
    services:
        - name: pymor/pypi-mirror_stable_py3.6:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    stage: install_checks
    image: zivgitlab.wwu.io/pymor/docker/pymor/deploy_checks_centos_8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script: ./.ci/gitlab/install_checks/centos_8/check.bash

pip 2/3:
    tags: [mike]
    services:
        - name: pymor/pypi-mirror_stable_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    stage: install_checks
    image: zivgitlab.wwu.io/pymor/docker/pymor/deploy_checks_debian_buster:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script: ./.ci/gitlab/install_checks/debian_buster/check.bash

pip 3/3:
    tags: [mike]
    services:
        - name: pymor/pypi-mirror_stable_py3.8:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    stage: install_checks
    image: zivgitlab.wwu.io/pymor/docker/pymor/deploy_checks_debian_bullseye:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script: ./.ci/gitlab/install_checks/debian_bullseye/check.bash


repo2docker:
    extends: .binder
    script:
        - repo2docker --user-id 2000 --user-name ${USER} --no-run --debug --image-name ${IMAGE} .
        - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
        - docker run ${IMAGE} ${CMD}
        - docker push ${IMAGE}

local_jupyter:
    extends: .binder
    script:
        - make docker_image
        - make DOCKER_CMD="${CMD}" docker_exec


trigger_binder 1/3:
    extends: .test_base
    stage: deploy
    image: alpine:3.10
    rules:
        - if: $CI_COMMIT_REF_NAME == "master"
          when: on_success
        - if: $CI_COMMIT_TAG != null
          when: on_success
    before_script:
        - apk --update add bash python3
        - pip3 install requests
    script:
        - python3 .ci/gitlab/trigger_binder.py "https://gke.mybinder.org/build/gh/pymor/pymor/${CI_COMMIT_REF}"

trigger_binder 2/3:
    extends: .test_base
    stage: deploy
    image: alpine:3.10
    rules:
        - if: $CI_COMMIT_REF_NAME == "master"
          when: on_success
        - if: $CI_COMMIT_TAG != null
          when: on_success
    before_script:
        - apk --update add bash python3
        - pip3 install requests
    script:
        - python3 .ci/gitlab/trigger_binder.py "https://ovh.mybinder.org/build/gh/pymor/pymor/${CI_COMMIT_REF}"

trigger_binder 3/3:
    extends: .test_base
    stage: deploy
    image: alpine:3.10
    rules:
        - if: $CI_COMMIT_REF_NAME == "master"
          when: on_success
        - if: $CI_COMMIT_TAG != null
          when: on_success
    before_script:
        - apk --update add bash python3
        - pip3 install requests
    script:
        - python3 .ci/gitlab/trigger_binder.py "https://gesis.mybinder.org/build/gh/pymor/pymor/${CI_COMMIT_REF}"

wheel 1 py3 6:
    extends: .wheel
    variables:
        PYVER: "3.6"
    artifacts:
        paths:
        - ${CI_PROJECT_DIR}/shared/pymor*manylinux1_*whl
        expire_in: 1 week
    script: bash .ci/gitlab/wheels.bash 1

wheel 2010 py3 6:
    extends: .wheel
    variables:
        PYVER: "3.6"
    artifacts:
        paths:
        - ${CI_PROJECT_DIR}/shared/pymor*manylinux2010_*whl
        expire_in: 1 week
    script: bash .ci/gitlab/wheels.bash 2010

wheel 2014 py3 6:
    extends: .wheel
    variables:
        PYVER: "3.6"
    artifacts:
        paths:
        - ${CI_PROJECT_DIR}/shared/pymor*manylinux2014_*whl
        expire_in: 1 week
    script: bash .ci/gitlab/wheels.bash 2014


wheel 1 py3 7:
    extends: .wheel
    variables:
        PYVER: "3.7"
    artifacts:
        paths:
        - ${CI_PROJECT_DIR}/shared/pymor*manylinux1_*whl
        expire_in: 1 week
    script: bash .ci/gitlab/wheels.bash 1

wheel 2010 py3 7:
    extends: .wheel
    variables:
        PYVER: "3.7"
    artifacts:
        paths:
        - ${CI_PROJECT_DIR}/shared/pymor*manylinux2010_*whl
        expire_in: 1 week
    script: bash .ci/gitlab/wheels.bash 2010

wheel 2014 py3 7:
    extends: .wheel
    variables:
        PYVER: "3.7"
    artifacts:
        paths:
        - ${CI_PROJECT_DIR}/shared/pymor*manylinux2014_*whl
        expire_in: 1 week
    script: bash .ci/gitlab/wheels.bash 2014


wheel 1 py3 8:
    extends: .wheel
    variables:
        PYVER: "3.8"
    artifacts:
        paths:
        - ${CI_PROJECT_DIR}/shared/pymor*manylinux1_*whl
        expire_in: 1 week
    script: bash .ci/gitlab/wheels.bash 1

wheel 2010 py3 8:
    extends: .wheel
    variables:
        PYVER: "3.8"
    artifacts:
        paths:
        - ${CI_PROJECT_DIR}/shared/pymor*manylinux2010_*whl
        expire_in: 1 week
    script: bash .ci/gitlab/wheels.bash 2010

wheel 2014 py3 8:
    extends: .wheel
    variables:
        PYVER: "3.8"
    artifacts:
        paths:
        - ${CI_PROJECT_DIR}/shared/pymor*manylinux2014_*whl
        expire_in: 1 week
    script: bash .ci/gitlab/wheels.bash 2014



pypi deploy:
    extends: .sanity_checks
    stage: deploy
    dependencies:
      - wheel 1 py3 6
    
      - wheel 2010 py3 6
    
      - wheel 2014 py3 6
    
    
      - wheel 1 py3 7
    
      - wheel 2010 py3 7
    
      - wheel 2014 py3 7
    
    
      - wheel 1 py3 8
    
      - wheel 2010 py3 8
    
      - wheel 2014 py3 8
    
    
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - if: $CI_COMMIT_REF_NAME =~ /^github.*/
          when: never
        - when: on_success
    variables:
        ARCHIVE_DIR: pyMOR_wheels-${CI_COMMIT_REF_NAME}
    artifacts:
        paths:
         - ${CI_PROJECT_DIR}/${ARCHIVE_DIR}/pymor*manylinux*whl
        expire_in: 6 months
        name: pymor-wheels
    script:
        - ${CI_PROJECT_DIR}/.ci/gitlab/pypi_deploy.bash
    environment:
        name: safe


check_wheel 1:
    extends: .check_wheel
    image: pymor/deploy_checks:devpi_centos_8
    script: devpi install pymor[full]

check_wheel 2:
    extends: .check_wheel
    image: pymor/deploy_checks:devpi_debian_buster
    script: devpi install pymor[full]

check_wheel 3:
    extends: .check_wheel
    image: pymor/deploy_checks:devpi_debian_bullseye
    script: devpi install pymor[full]


docs build:
    extends: .test_base
    tags: [mike]
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - when: on_success
    services:
        - name: zivgitlab.wwu.io/pymor/docker/pymor/pypi-mirror_stable_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
          alias: pypi_mirror
    image: zivgitlab.wwu.io/pymor/docker/pymor/jupyter_py3.7:f6acb8bdf750d965c15f7f90b01fac4b745b58bd
    script:
        - ${CI_PROJECT_DIR}/.ci/gitlab/test_docs.bash
    stage: build
    needs: ["ci setup"]
    artifacts:
        paths:
            - docs/_build/html
            - docs/error.log

docs:
    extends: .test_base
    # makes sure this doesn't land on the test runner
    tags: [mike]
    image: alpine:3.11
    stage: deploy
    resource_group: docs_deploy
    dependencies:
        - docs build
    needs: ["docs build"]
    before_script:
        - apk --update add make python3 bash
        - pip3 install jinja2 pathlib
    script:
        - ${CI_PROJECT_DIR}/.ci/gitlab/deploy_docs.bash
    rules:
        - if: $CI_PIPELINE_SOURCE == "schedule"
          when: never
        - if: $CI_COMMIT_REF_NAME =~ /^github\/PR_.*/
          when: never
        - when: on_success
    environment:
        name: safe

# THIS FILE IS AUTOGENERATED -- DO NOT EDIT #
#   Edit and Re-run .ci/gitlab/template.ci.py instead       #
