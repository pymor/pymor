# THIS FILE IS AUTOGENERATED -- DO NOT EDIT #
#   Edit and Re-run .ci/gitlab/template.ci.py instead       #

stages:
  - test
  - check install
  - deploy

.test_base:
    retry:
        max: 2
        when:
            - runner_system_failure
            - stuck_or_timeout_failure
            - api_failure
    only: ['branches', 'tags', 'triggers', 'merge-requests']

.pytest:
    extends: .test_base
    script: .ci/gitlab/script.bash
    environment:
        name: unsafe
    after_script:
      - .ci/gitlab/after_script.bash
    artifacts:
        name: "$CI_JOB_STAGE-$CI_COMMIT_REF_SLUG"
        expire_in: 3 months
        paths:
            - src/pymortests/testdata/check_results/*/*_changed
            - .coverage
        reports:
            junit: test_results.xml

numpy 3.6:
    extends: .pytest
    image: pymor/testing:3.6
    stage: test
    variables:
        PYMOR_PYTEST_MARKER: "numpy"
Vanilla 3.6:
    extends: .pytest
    image: pymor/testing:3.6
    stage: test
    variables:
        PYMOR_PYTEST_MARKER: "Vanilla"
PIP_ONLY 3.6:
    extends: .pytest
    image: pymor/testing:3.6
    stage: test
    variables:
        PYMOR_PYTEST_MARKER: "PIP_ONLY"
MPI 3.6:
    extends: .pytest
    image: pymor/testing:3.6
    stage: test
    variables:
        PYMOR_PYTEST_MARKER: "MPI"
Vanilla 3.7:
    extends: .pytest
    image: pymor/testing:3.7
    stage: test
    variables:
        PYMOR_PYTEST_MARKER: "Vanilla"
PIP_ONLY 3.7:
    extends: .pytest
    image: pymor/testing:3.7
    stage: test
    variables:
        PYMOR_PYTEST_MARKER: "PIP_ONLY"
MPI 3.7:
    extends: .pytest
    image: pymor/testing:3.7
    stage: test
    variables:
        PYMOR_PYTEST_MARKER: "MPI"


submit Vanilla 3.6:
    extends: .test_base
    image: pymor/python:3.6
    stage: deploy
    dependencies:
        - Vanilla 3.6
    environment:
        name: safe
    except:
        - github/PR_.*
    variables:
        PYMOR_PYTEST_MARKER: "Vanilla"
    script: .ci/gitlab/submit.bash
submit PIP_ONLY 3.6:
    extends: .test_base
    image: pymor/python:3.6
    stage: deploy
    dependencies:
        - PIP_ONLY 3.6
    environment:
        name: safe
    except:
        - github/PR_.*
    variables:
        PYMOR_PYTEST_MARKER: "PIP_ONLY"
    script: .ci/gitlab/submit.bash
submit Vanilla 3.7:
    extends: .test_base
    image: pymor/python:3.7
    stage: deploy
    dependencies:
        - Vanilla 3.7
    environment:
        name: safe
    except:
        - github/PR_.*
    variables:
        PYMOR_PYTEST_MARKER: "Vanilla"
    script: .ci/gitlab/submit.bash
submit PIP_ONLY 3.7:
    extends: .test_base
    image: pymor/python:3.7
    stage: deploy
    dependencies:
        - PIP_ONLY 3.7
    environment:
        name: safe
    except:
        - github/PR_.*
    variables:
        PYMOR_PYTEST_MARKER: "PIP_ONLY"
    script: .ci/gitlab/submit.bash

.docker-in-docker:
    retry:
        max: 2
        when:
            - always
    image: docker:stable
    variables:
        DOCKER_HOST: tcp://docker:2375/
        DOCKER_DRIVER: overlay2
    before_script:
        - apk --update add openssh-client rsync git file bash python3
        - pip3 install jinja2
        - 'export SHARED_PATH="${CI_PROJECT_DIR}/shared"'
        - mkdir -p ${SHARED_PATH}
    services:
        - docker:dind
    environment:
        name: unsafe
pip debian stretch:
    extends: .docker-in-docker
    stage: deploy
    script: docker build -f .ci/docker/install_checks/debian_stretch/Dockerfile .

pip debian buster:
    extends: .docker-in-docker
    stage: deploy
    script: docker build -f .ci/docker/install_checks/debian_buster/Dockerfile .

pip debian testing:
    extends: .docker-in-docker
    stage: deploy
    script: docker build -f .ci/docker/install_checks/debian_testing/Dockerfile .

pip centos 7:
    extends: .docker-in-docker
    stage: deploy
    script: docker build -f .ci/docker/install_checks/centos_7/Dockerfile .

wheel 3.6:
    extends: .docker-in-docker
    stage: deploy
    only: ['branches', 'tags', 'triggers']
    variables:
        PYVER: "3.6"
        TEST_OS: "debian_stretch debian_buster debian_testing centos_7"
    script: bash .ci/gitlab/wheels.bash
    artifacts:
        paths:
        # cannot use exported var from env here
        - ${CI_PROJECT_DIR}/shared/pymor*manylinux*whl
        expire_in: 1 week

wheel 3.7:
    extends: .docker-in-docker
    stage: deploy
    only: ['branches', 'tags', 'triggers']
    variables:
        PYVER: "3.7"
        TEST_OS: "debian_stretch debian_buster debian_testing centos_7"
    script: bash .ci/gitlab/wheels.bash
    artifacts:
        paths:
        # cannot use exported var from env here
        - ${CI_PROJECT_DIR}/shared/pymor*manylinux*whl
        expire_in: 1 week


# THIS FILE IS AUTOGENERATED -- DO NOT EDIT #
#   Edit and Re-run .ci/gitlab/template.ci.py instead       #
