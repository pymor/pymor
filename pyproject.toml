[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "pymor"
dynamic = ["version"]
description = " "
readme = "README.md"
license.file = "LICENSE.txt"
requires-python = ">=3.8"
authors = [
    { name = "pyMOR developers", email = "main.developers@pymor.org" },
]
maintainers = [
    { name = "Rene Fritze", email = "rene.fritze@wwu.de" },
]
classifiers = [
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Scientific/Engineering :: Mathematics",
]
dependencies = [
    "click",
    "diskcache",
    "numpy>=1.17.5;python_version == '3.8'",
    "numpy>=1.19.4;python_version == '3.9'",
    "numpy>=1.21.5;python_version >= '3.10'",
    "packaging",
    "qtpy>2.0",
    "scipy>=1.5.1;python_version == '3.8'",
    "scipy>=1.5.4;python_version == '3.9'",
    "scipy>=1.7.3;python_version >= '3.10'",
    "typer",
]

[project.optional-dependencies]
io = [
    "gmsh",
    "lxml",
    "meshio>=4.4",
    "pyevtk",
    "xmljson",
]
docs = [
    "bash_kernel",
    "ipydatawidgets==4.3.2",
    "ipyparallel>=6.2.5",
    "ipywidgets>7",
    "matplotlib",
    "myst-nb>=0.16",
    "PySide2>=5.15.2.1",
    "python-slugify",
    "sphinx-autoapi>=1.8,<2",
    "sphinx-material",
    "sphinx-qt-documentation",
    "sphinx>=5.0,<5.2",
    "sphinxcontrib-applehelp<1.0.3",
    "sphinxcontrib-bibtex",
]
full = [
    "pymor[docs,io]",
    "dune-gdt>=2022.5.3; platform_system==\"Linux\" and platform_machine==\"x86_64\"",
    "dune-xt[visualisation]>=2022.5.3; platform_system==\"Linux\" and platform_machine==\"x86_64\"",
    "ipython>=6.0",
    "jupyter_contrib_nbextensions",
    "jupyter_server>1.3,<2.0",
    "jupytext>=1.14.4",
    "k3d>=2.15.1",
    "meshio>=4.4",
    "pillow",
    "pygments",
    "pyopengl",
    "pythreejs",
    "scikit-fem==6.0.0",
    "sympy",
    "torch>=1.11.0",
]
all = [
    "pymor[full]",
    "slycot>=0.4.0",
    "mpi4py>=3.0.3;python_version == '3.9'",
    "mpi4py>3.0.3;python_version >= '3.10'",
    "mpi4py>=3.0;python_version < '3.9'",
    "pymess"
]
ci = [
    "check-manifest==0.49",
    "check_reqs==1.0.0",
    "docutils==0.18",
    "hatchling",
    "hatch-vcs",
    "hypothesis==6.56.3",
    "hypothesis[numpy,pytest]==6.56.3",
    "pybind11==2.9.2",
    "pypi-oldest-requirements==2022.1.0",
    "pyqt5-qt5==5.15.2",
    "pyqt5==5.15.7",
    "pytest-cov==4.0.0",
    "pytest-memprof==0.2.0",
    "pytest-notebook==0.8.1",
    "pytest-parallel==0.1.1",
    "pytest-regressions==2.4.1",
    "pytest-xdist==3.1.0",
    "pytest==7.2.0",
    "python-dotenv==0.21.0",
    "python-gitlab==3.12.0",
    "readme_renderer[md]==37.0",
    "rstcheck==6.1.1",
    "ruff==0.0.242",
    "twine==4.0.2",
]

[project.scripts]
pymor-demo = "pymor.scripts.pymor_demo:run"
pymor-vis = "pymor.scripts.pymor_vis:run"

[project.urls]
Homepage = "https://pymor.org"

[tool.hatch.version]
source = "vcs"

[tool.hatch.build.targets.sdist]
include = [
    "/src",
]

# This file is autogenerated. Edit dependencies.py instead
[tool.ruff]
# this makes isort behave nicely
src = ["src"]
line-length = 120
select = ["D", "E", "F", "I", "ICN", "N", "Q", "W"]
ignore = [
    "D10", "D404",
    "D401", "D405", "D407", "D410", "D411", "D414", # related to 'parameters'
    "E402", "E731", "E741",
    "F722",
    "N802", "N803", "N806"]
# D10? missing docstring in module, function, method, magic, __init__, public nested class
# D404 First word of the docstring should not be "This"
# D405, D407, D410, D411, D414 The linter thins the argument name 'parameters' is a docstring section
# E402 module level import not at top of file (due to config.require("PKG") syntax)
# E731 do not assign a lambda expression, use a def
# E741 do not use variables named 'l', 'O', or 'I'
# F722 syntax error in forward annotation
# N802 function name should be lowercase
# N803 argument name should be lowercase (we use single capital letters everywhere for vectorarrays)
# N806 same for variables in function

[tool.ruff.flake8-import-conventions]
[tool.ruff.flake8-import-conventions.extend-aliases]
"scipy.linalg" = "spla"

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"src/pymor/algorithms/rules.py" = ["N801", "N805"] # class name CapWords convention, first argument should be `self`
"src/pymor/analyticalproblems/expressions.py" = ["N801"] # class name CapWords convention
"versioneer.py" = ["N801"] # class name CapWords convention
"docs/source/try_on_binder.py" = ["N801"] # class name CapWords convention
"src/pymordemos/*" = ["F403", "F405"] # undefined import due to pymor.basic functionality

[tool.ruff.pycodestyle]
max-doc-length = 100

[tool.ruff.pydocstyle]
convention = "numpy"
